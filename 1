private JSONArray queryPlanInfoList(final String productCode, final String skuId) throws ToaBusinessException{
		// 根据SKUID查询报价
		QuotationSkuRequest quotationSkuRequest = new QuotationSkuRequest();
		quotationSkuRequest.setProductCode(productCode);
		quotationSkuRequest.setSkuId(skuId);
		JSONObject priceList = insuranceServiceImpl.queryQuotationBySkuId(quotationSkuRequest);
		if(CollectionUtils.isEmpty(priceList)){
			throw new ToaBusinessException(InsuranceConstant.INVALID_CODE, "查询报价失败,skuId:"+quotationSkuRequest.getSkuId()+",productCode:"+quotationSkuRequest.getProductCode());
		}
		
		JSONArray newPlanInfoArray = new JSONArray();
		JSONArray planInfoArray = priceList.getJSONArray(InsuranceConstant.PLAN_LIST);
		for (int i = 0; i < planInfoArray.size(); i++) {
			JSONObject planInfo = planInfoArray.getJSONObject(i);
			if (StringUtil.isBlank(planInfo.getString(InsuranceConstant.PLAN_CODE))) {
				continue;
			}
			// 非自定义保障项目金额:当priceType=1时, 保障金额取该值; 当priceType=0时,取securityProAssuredSumList列表
			// 处理
			String securityProAssuredSum = planInfo.getString(InsuranceConstant.SECURITY_PRO_ASSURED_SUM);
			if (StringUtil.isBlank(securityProAssuredSum)) {
				continue;
			}
			// 商城返回有10万类似情况, 重新计算并转换
			planInfo.put(InsuranceConstant.PLAN_SUM_INS, calculateSumIns(securityProAssuredSum));
			// 商城返回日期期限有12M类似情况, 但报价只能解析数字, 暂只能截取替换
			planInfo.put(InsuranceConstant.PLAN_PREM_TERM, resolvePremTerm(planInfo.getString(InsuranceConstant.PLAN_PREM_TERM)));
			// 该字段为描述字段, 数据太多, 删除
			planInfo.remove(InsuranceConstant.SECURITY_PRO_INSTRUCTION);
			// 因planInfo中不同场景下需要不同字段, 故直接使用原始字段
//			newPlan.put(InsuranceConstant.PLAN_CODE, plan.getString(InsuranceConstant.PLAN_CODE));
//			newPlan.put(InsuranceConstant.PLAN_PREM_TYPE, plan.getString(InsuranceConstant.PLAN_PREM_TYPE));
//			newPlan.put(InsuranceConstant.SECURITY_PRO_CODE, plan.getString(InsuranceConstant.SECURITY_PRO_CODE));
//			newPlan.put(InsuranceConstant.SECURITY_PRO_NAME, plan.getString(InsuranceConstant.SECURITY_PRO_NAME));
//			newPlan.put(InsuranceConstant.SECURITY_FIRST_PRO_NAME,plan.getString(InsuranceConstant.SECURITY_FIRST_PRO_NAME));
//			newPlan.put(InsuranceConstant.BEN_LEVEL, plan.getString(InsuranceConstant.BEN_LEVEL));
//			newPlan.put(InsuranceConstant.SECURITY_PRO_INSTRUCTION,plan.getString(InsuranceConstant.SECURITY_PRO_INSTRUCTION));
			
			newPlanInfoArray.add(planInfo);
		}
		return newPlanInfoArray;
	}
